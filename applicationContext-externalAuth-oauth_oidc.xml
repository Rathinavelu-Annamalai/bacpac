<!--
 ~ Copyright (C) 2005 - 2012 Jaspersoft Corporation. All rights reserved.
 ~ http://www.jaspersoft.com.
 ~ Licensed under commercial Jaspersoft Subscription License Agreement
 -->

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">
    
    <!-- ############ SSO auth ############
     - Sample configuration of SSO via JasperServer API
     -->
    <bean id="externalAuthSuccessHandler" class="com.jaspersoft.jasperserver.api.security.externalAuth.JrsExternalAuthenticationSuccessHandler" parent="successHandler">
    	<property name="externalDataSynchronizer">
      		<ref bean="externalDataSynchronizer"/>
   	 </property>

   </bean>  
    
    <bean id="proxyPreAuthenticatedProcessingFilter" class="com.jaspersoft.jasperserver.ps.OIDC.OIDCPreAuthenticationFilter">
        <!--<property name="externalDataSynchronizer" ref="externalDataSynchronizer"/>-->
		
		
		<property name="authenticationSuccessHandler" ref="externalAuthSuccessHandler" />
        <property name="authenticationManager" ref="OIDCAuthenticationManager"/>
        
        <!--<property name="authenticationFailureUrl">
            <value>/login.html?error=1</value>
        </property>
        <property name="defaultTargetUrl">
            <value>/loginsuccess.html</value>
        </property>  property not found ! -->
		
        <property name="filterProcessesUrl">
            <value>/oauth</value>
        </property>  
        
        <property name="authorization_location" >
            <value>https://openam-aim.forgeblocks.com/am/oauth2/authorize</value>
        </property>
        <property name="client_id" >
            <value>e64b7290f148a6e90359099b6105f616</value>
        </property>
        <property name="redirecturl">
        <value>https://www.reports.aimplutus.azlifem.azl.pvt/jasperserver-pro/oauth</value>
        </property>
        <property name="token_location" >
            <value>https://openam-aim.forgeblocks.com/am/oauth2/access_token</value>
            <!-- Respond with access token / id token  -->
        </property>
        <property name="clientsecret" >
            <value>s4DSYaK1gsUdRLEfJ8hBnodsIEcA7TWjoPjSSUmAK5c=</value>
        </property>
        <property name="scopes">
            <value>openid</value>
        </property>
		<property name="tokenMethod">
            <value>POST</value>
        </property>
		
    </bean>
    
    
    
    <!-- comment for JRS 7.2 and above : raise an issue for internal user authentication in JRS 
    <bean id="proxyAuthenticationProcessingFilter"
        class="com.jaspersoft.jasperserver.api.security.EncryptionAuthenticationProcessingFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="postOnly" value="false"/>
        <property name="authenticationFailureHandler" ref="failureHandler" />
        <property name="authenticationSuccessHandler" ref="successHandler" />
        <property name="filterProcessesUrl" value="/j_spring_security_check"/>
        <property name="allowSessionCreation" value="true" />
        <property name="sessionAuthenticationStrategy" ref="sas"/>
    </bean>
	-->
    
    
	   <bean id="OIDCAuthenticationProvider" class="com.jaspersoft.jasperserver.ps.OIDC.OIDCAuthenticationProvider">
        <property name="userDetailsService" ref="OIDCUserDetailsService"/>
       </bean>
	   
            <bean id="OIDCUserDetailsService" class="com.jaspersoft.jasperserver.ps.OIDC.OIDCUserDetailsServiceImpl">
           <property name="issuer">
               <value>https://openam-aim.forgeblocks.com/am/oauth2</value>
           </property>
           <property name="audience">
               <value>e64b7290f148a6e90359099b6105f616</value><!-- api://default-->
           </property>
           <property name="clientId">
               <value>e64b7290f148a6e90359099b6105f616</value>
           </property>
           <property name="javascript_client_id" >
                <value>a8abc33ef891071f9256cee892b8719e</value>
            </property>
           <!-- well known url to keys for encrypt/decrypt and signature verification-->
           <property name="keyUrl"> <!--Todo-->
               <value>connect/jwk_uri</value> <!-- https://openam-aim.forgeblocks.com/am/oauth2/connect/jwk_uri -->
           </property>
           

       
       </bean>
       
       <bean id="OIDCAuthenticationManager" class="com.jaspersoft.jasperserver.api.security.externalAuth.wrappers.spring.JSProviderManager">
           <constructor-arg index="0">
               <list>
                   <ref local="OIDCAuthenticationProvider"/>
                   <ref bean="${bean.daoAuthenticationProvider}"/>
                   <!-- anonymousAuthenticationProvider only needed if filterInvocationInterceptor.alwaysReauthenticate is set to true
                    <ref bean="anonymousAuthenticationProvider"/>-->
               </list>
                 </constructor-arg>
          
       </bean>
       
       <bean id="externalDataSynchronizer"
           class="com.jaspersoft.jasperserver.ps.OIDC.OIDCMTExternalDataSynchronizerImpl">
           <property name="externalUserProcessors">
               <list>
                   <ref local="externalTenantSetupProcessor"/>
                   <ref local="mtExternalUserSetupProcessor"/>
                   <!-- OPTIONAL processor: comment out if no profile attributes are expected
                    <ref local="externalProfileAttributeProcessor"/>  -->
                   <!-- uncomment for user home folder creation processing
                    <ref local="externalUserFolderProcessor"/>
                    -->
                   
               </list>
           </property>
                 </bean>
       
       
       
       
       <bean id="abstractExternalProcessor" class="com.jaspersoft.jasperserver.api.security.externalAuth.processors.AbstractExternalUserProcessor" abstract="true">
           <property name="repositoryService" ref="${bean.repositoryService}"/>
           <property name="userAuthorityService" ref="${bean.userAuthorityService}"/>
           <property name="tenantService" ref="${bean.tenantService}"/>
           <property name="profileAttributeService" ref="profileAttributeService"/>
           <property name="objectPermissionService" ref="objectPermissionService"/>
       </bean>

    <!-- Map roles -->
       <bean id="mtExternalUserSetupProcessor" class="com.jaspersoft.jasperserver.multipleTenancy.security.externalAuth.processors.MTExternalUserSetupProcessor" parent="abstractExternalProcessor">
           <!--Default permitted role characters; others are removed. Change regular expression to allow other chars.
            <property name="permittedExternalRoleNameRegex" value="[A-Za-z0-9_]+"/>-->
           
           <property name="organizationRoleMap">
               <map>
                   <!-- Example of mapping customer roles to JRS roles : Chanel don't have roles from IDP Only defaultRoles below are used -->
                   <entry>
                       <key>
                           <value>XXXXX</value>
                       </key>
                       <!-- JRS role that the <key> external role is mapped to-->
                       <!--<value>ROLE_ADMINISTRATOR</value>-->
                       <value>ROLE_ADMINISTRATOR|*</value>
                   </entry>
               </map>
           </property>
           
           <property name="userAuthorityService">
               <ref bean="${bean.internalUserAuthorityService}"/>
           </property>
           <property name="defaultInternalRoles">
               <list>
                   <value>ROLE_USER</value>
               </list>
           </property>
           
           
       </bean>
       
       <bean id="externalUserFolderProcessor"
           class="com.jaspersoft.jasperserver.api.security.externalAuth.processors.ExternalUserFolderProcessor"
           parent="abstractExternalProcessor">
           <property name="repositoryService" ref="${bean.unsecureRepositoryService}"/>
       </bean>
       
       <bean id="externalTenantSetupProcessor" class="com.jaspersoft.jasperserver.multipleTenancy.security.externalAuth.processors.MTExternalTenantSetupProcessor" parent="abstractExternalProcessor">
           <property name="multiTenancyService"><ref bean="internalMultiTenancyService"/></property>
           <property name="defaultOrganization" value="organization_1"/>
           <property name="tenantIdNotSupportedSymbols" value="#{configurationBean.tenantIdNotSupportedSymbols}"/>
           
           <!-- User credentials are setup in js.externalAuth.properties-->
           <property name="externalTenantSetupUsers">
               <list>
                   <bean class="com.jaspersoft.jasperserver.multipleTenancy.security.externalAuth.processors.MTAbstractExternalProcessor.ExternalTenantSetupUser">
                       <property name="username" value="${new.tenant.user.name.1}"/>
                       <property name="fullName" value="${new.tenant.user.fullname.1}"/>
                       <property name="password" value="${new.tenant.user.password.1}"/>
                       <property name="emailAddress" value="${new.tenant.user.email.1}"/>
                       <property name="roleSet">
                           <set>
                               <value>ROLE_ADMINISTRATOR</value>
                               <value>ROLE_USER</value>
                           </set>
                       </property>
                   </bean>
               </list>
           </property>
       </bean>
       
       <bean id="externalProfileAttributeProcessor" class="com.jaspersoft.jasperserver.api.security.externalAuth.processors.ExternalProfileAttributeProcessor" parent="abstractExternalProcessor">
       </bean>
	   
	   <!-- Start for session timeout redirect to provider instead of JRS login page -->
       
	   <bean id="proxyExceptionTranslationFilter" class="com.jaspersoft.jasperserver.api.security.externalAuth.wrappers.spring.JSExceptionTranslationFilter">
    <constructor-arg index="0">
		  <bean class="com.jaspersoft.jasperserver.api.security.externalAuth.wrappers.spring.JSLoginUrlAuthenticationEntryPoint">
			<constructor-arg index="0">
			  <value>https://www.reports.aimplutus.azlifem.azl.pvt/jasperserver-pro/oauth</value>
			</constructor-arg>
			<property name="forceHttps">
			  <value>false</value>
			</property>
		  </bean>
		</constructor-arg>
		<property name="accessDeniedHandler">
		  <bean class="com.jaspersoft.jasperserver.war.JRSAccessDeniedHandlerImpl">
			<property name="errorPage" value="/WEB-INF/jsp/modules/system/AccessDeniedPage.jsp"/>
			<property name="themeResolver" ref="themeResolver" />
			<property name="themeSource" ref="themeSource" />
			<property name="localeResolver" ref="filterLocaleResolver"/>
		  </bean>
		</property>
	  </bean>
	  
	   <!-- End for session timeout redirect to provider instead of JRS login page -->
        
		<bean id="externalAuthProperties" class="com.jaspersoft.jasperserver.api.security.externalAuth.ExternalAuthProperties">
        
        
        <property name="logoutUrl" value="https://www.reports.aimplutus.azlifem.azl.pvt/jasperserver-pro/login.html"/>
        
        </bean>
        
       
</beans>
